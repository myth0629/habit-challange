plugins {
    id 'java'
    id 'org.springframework.boot' version '3.2.3'
    id 'io.spring.dependency-management' version '1.1.4'
    id 'jacoco'
    id 'io.freefair.lombok' version '8.4'
}

group = 'com.habitchallenge'
version = '0.0.1-SNAPSHOT'

java {
    sourceCompatibility = '17'
    targetCompatibility = '17'
}

repositories {
    mavenCentral()
}

ext {
    set('springCloudVersion', "2023.0.0")
}

dependencies {
    // Spring Boot Starters
    implementation 'org.springframework.boot:spring-boot-starter'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    
    // JWT
    implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
    implementation 'io.jsonwebtoken:jjwt-impl:0.11.5'
    implementation 'io.jsonwebtoken:jjwt-jackson:0.11.5'
    
    // Jakarta EE (for JPA 3.0+ and JWT)
    implementation 'jakarta.persistence:jakarta.persistence-api:3.1.0'
    implementation 'jakarta.transaction:jakarta.transaction-api:2.0.1'
    implementation 'jakarta.annotation:jakarta.annotation-api:2.1.1'
    implementation 'jakarta.xml.bind:jakarta.xml.bind-api:4.0.0'
    implementation 'org.glassfish.jaxb:jaxb-runtime:4.0.3'
    
    // Database
    runtimeOnly 'com.mysql:mysql-connector-j'
    implementation 'org.hibernate.orm:hibernate-core:6.3.1.Final'
    
    // Lombok
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    
    // MapStruct
    implementation 'org.mapstruct:mapstruct:1.5.5.Final'
    annotationProcessor 'org.mapstruct:mapstruct-processor:1.5.5.Final'
    
    // Test
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
    testRuntimeOnly 'com.h2database:h2'
    
    implementation 'org.springframework.security:spring-security-core:6.1.5'
    implementation 'org.springframework.security:spring-security-config:6.1.5'
    implementation 'org.springframework.security:spring-security-web:6.1.5'
    
    // Hibernate Types
    implementation 'com.vladmihalcea:hibernate-types-60:2.21.1'
    
    // JSON
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.15.3'
    
    // Apache Commons Lang
    implementation 'org.apache.commons:commons-lang3:3.13.0'
    
    // Test
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'
    testRuntimeOnly 'com.h2database:h2'
    
    // Development Tools
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    
    // Security
    implementation 'org.springframework.security:spring-security-core:6.1.5'
    implementation 'org.springframework.security:spring-security-config:6.1.5'
    implementation 'org.springframework.security:spring-security-web:6.1.5'
    
    // Hibernate Annotations
    implementation 'org.hibernate.common:hibernate-commons-annotations:6.0.6.Final'
}

tasks.named('test') {
    useJUnitPlatform()
}

// Configure Java compiler for Java 17
compileJava {
    options.compilerArgs = [
        '-Amapstruct.defaultComponentModel=spring',
        '--add-modules', 'jdk.incubator.vector',
        '--release', '17'
    ]
    options.encoding = 'UTF-8'
}

// Ensure clean build
tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'
}

// Configure JAR task
bootJar {
    archiveFileName = "${project.name}.jar"
}
